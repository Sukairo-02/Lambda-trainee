service: redistribution
frameworkVersion: '3'

provider:
    name: aws
    runtime: nodejs14.x
    region: ${opt:region, 'eu-north-1'}
    stage: ${opt:stage, 'dev'}

    environment:
        dbHost: redistributioninstance.czgptk5rrrtr.eu-north-1.rds.amazonaws.com
        dbPort: 5432
        dbName: redistribution
        dbUsername: redistrmaster
        dbPassword: 46redistrmaster43
        dbQueueUrl: !Ref DatabaseQueue

    iamRoleStatements:
        - Effect: Allow
          Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:SendMessage
          Resource: !GetAtt DatabaseQueue.Arn
        - Effect: Allow
          Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - ec2:CreateNetworkInterface
              - ec2:DescribeNetworkInterface
              - ec2:DeleteNetworkInterface
          Resource: '*'

functions:
    postQuery:
        handler: src/index.postQuery
        events:
            - httpApi:
                  path: /query
                  method: post

    handleQuery:
        handler: src/index.handleQuery
        events:
            - sqs:
                  arn: !GetAtt DatabaseQueue.Arn
                  batchSize: 50
                  maximumBatchingWindow: 1
                  functionResponseType: ReportBatchItemFailures

    adminDBShopInit:
        handler: src/index.adminDBShopInit
        events:
            - httpApi:
                  path: /admin/dbShopInit
                  method: post

    adminCheckDB:
        handler: src/index.adminCheckDB
        events:
            - httpApi:
                  path: /admin/checkDB
                  method: post

resources:
    Resources:
        DatabaseQueue:
            Type: AWS::SQS::Queue
            Properties:
                QueueName: redistribution-queue-${self:provider.stage}
                MaximumMessageSize: 1024

plugins:
    - serverless-webpack
